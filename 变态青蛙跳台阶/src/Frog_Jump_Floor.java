/**
 * Created with IntelliJ IDEA.
 * Description: 使用动态规划求解变态青蛙跳台阶问题
 * 一只青蛙一次可以跳上 1 级台阶, 也可以跳上 2 级台阶 ... 也可以跳上 n 级台阶. 求该青蛙跳上一个 n 级台阶总共有多少种跳法
 * F(1): {1}
 * F(2): {1,1}, {2}
 * F(3): (1,2}, {1,1,1}, {2,1}, {3}
 * F(4): {1,3}, {1,1,2}, {2,2}, {1,2,1}, {1,1,1,1}, {2,1,1}, {3,1}, {4}
 * 由以上规律可以看出, F(4) 主要是由 跳上1级台阶的方法数 + 跳上2级台阶的方法数 + 跳上3级台阶的方法数 + 直接跳到4级台阶的方法数 组成的
 * F(4) = F(3) + F(2) + F(1) + 1
 *
 * 问题: 跳上 n 级台阶的方法数
 * 状态F(i): 跳上 i 级台阶的方法数
 * 转移方程: F(i) = F(i - 1) + F(i - 2) + ... + F(0);
 *          F(i - 1) = F(i - 2) + F(i - 3) + ... + F(0);
 *
 *          → F(i) = F(i - 1) + F(i - 1) = 2 * F(i - 1)  → 相当于是 2^(i - 1)
 *
 * 初始状态: F(1) = 1
 * 返回: F(n)
 * User: HHH.Y
 * Date: 2020-08-13
 */
public class Frog_Jump_Floor {
    public int JumpFloorII(int target) {
        if(target == 0) {
            return 0;
        }
        // 初始状态 F(1) = 1
        int ret = 1;
        // 通过状态转移方程求解
        for (int i = 2; i <= target; i++) {
            ret *= 2;
        }
        return ret;

//        return 1 << (target - 1);
    }
}
